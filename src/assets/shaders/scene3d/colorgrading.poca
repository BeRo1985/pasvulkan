
var lift = 0.5;
var gamma = 1.0;
var gain = 0.25;

var slope = lift * gain;
var offset = (1.0 - lift) * gain;
var power = (gamma == 0.0) ? 3.402823466e+38 : (1.0 / gamma);

function applyLGG(v) {
  return Math.max(0.0, (((v - 1.0) * lift) + 1.0) * gain) ** ((gamma == 0.0) ? 3.402823466e+38 : (1.0 / gamma));
  //(gain * (x + lift * (1-x)))^(1/gamma
  //return Math.max(0.0, (gain * (v + (lift * (1.0 - v))))) ** ((gamma == 0.0) ? 3.402823466e+38 : (1.0 / gamma));
  //return ((v * (0.5 + (gain * 0.5) - (lift  * 0.5))) + (lift * 0.5)) ** ((gamma == 0.0) ? 3.402823466e+38 : (1.0 / gamma));
}

function applySOP(v){
  return Math.max(0.0, (v * slope) + offset) ** power;
}

let v = 1.3;
print(applyLGG(v), " ", applySOP(v), "\n");

/*
var lift0 = [0.5, 1.0];
var gamma0 = [1.0, 1.0];
var gain0 = [0.25, 1.0];
lift = lift0[0] * lift0[1];
gamma = gamma0[0] * gamma0[1];
gain = gain0[0] * gain0[1];
var slope0 = [lift0[0] * gain0[0], lift0[1] * gain0[1]];
var offset0 = [(1.0 - lift0[0]) * gain0[0], (1.0 - lift0[1]) * gain0[1]];
var power0 = [(gamma0[0] == 0.0) ? 3.402823466e+38 : (1.0 / gamma0[0]), (gamma0[1] == 0.0) ? 3.402823466e+38 : (1.0 / gamma0[1])];
slope = slope0[0] * slope0[1];
offset = offset0[0] * offset0[1];
power = power0[0] * power0[1];
print(applyLGG(v), " ", applySOP(v), " lift: ", lift, " gamma: ", gamma, " gain: ", gain, " slope: ", slope, " offset: ", offset, " power: ", power, "\n");
*/


