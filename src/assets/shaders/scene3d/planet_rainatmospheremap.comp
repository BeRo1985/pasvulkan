#version 450 core

#pragma shader_stage(compute)

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_samplerless_texture_functions : enable

/* clang-format off */

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(set = 0, binding = 0) uniform texture2D uImageRainMap;

layout(set = 0, binding = 1) uniform texture2D uImageAtmosphereMap;

layout(set = 0, binding = 2, std430) buffer RainAtmosphereMapBuffer {
  float values[];
} rainAtmosphereMapBuffer;

/* clang-format on */

void main(){
  uvec2 texel = uvec2(gl_GlobalInvocationID.xy);
  uvec2 texSize = uvec2(textureSize(uImageRainMap, 0).xy);
  if(all(lessThan(texel, texSize))){
    rainAtmosphereMapBuffer.values[(texel.y * texSize.x) + texel.x] = texelFetch(uImageRainMap, ivec2(texel), 0).x * texelFetch(uImageAtmosphereMap, ivec2(texel), 0).x;
  }
}