
let resolution = 16;

let triangles = new Array((resolution + 1) * (resolution + 1) * 3);

let k = 0, c = 0;

// loop through rows of vertices on bottom side, only + 1 because we're excluding the single one on the right side
for(let i = 0; i < resolution + 1; i++){

  print(k, ": ");

  // loop through vertices on this row
  for(let j = 0; j < (resolution + 1) - i; j++){

    print(j, " ");

    let next = c + ((resolution + 2) - i); // calculates vertex next to this one on next row

    triangles[k] = c; // current vertex
    triangles[k + 1] = c + 1; // vertex next on row
    triangles[k + 2] = next; // vertex next to this one on next row

    // if not at bottom, add down pointing triangles
    if(j > 0){
      triangles[k + 3] = c;
      triangles[k + 4] = next;
      triangles[k + 5] = next - 1;

      k += 3;
    }

    k += 3;
    c++;
  }

  c++; // since we're skipping the top vertex, increment counter

  print("\n");
}

print("k: ", k, "\n");
