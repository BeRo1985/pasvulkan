#version 450 core

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_multiview : enable
#extension GL_EXT_samplerless_texture_functions : enable

/* clang-format off */

layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

/* clang-format on */

layout(set = 0, binding = 0, rgba8) uniform writeonly image3D uDestinationTexture;

#include "math.glsl"

#include "atmosphere_clouds_noise.glsl"

void main(){

  ivec3 p = ivec3(gl_GlobalInvocationID.xyz), size = imageSize(uDestinationTexture).xyz; 

  if(all(greaterThanEqual(p, ivec3(0))) && all(lessThan(p, size))){          

    vec3 o = vec3(p) / vec3(size);
    
    const float perlinWorleyDifference = 0.3,      
                perlinDilateLowRemap = 0.3,
                perlinDilateHighRemap = 1.4,
                worleyDilateLowRemap = -0.3,
                worleyDilateHighRemap = 1.3,
                totalWorleyLowRemap = -0.4,
                totalWorleyHighRemap = 1.0,
                totalSize = 1.0;

    imageStore(uDestinationTexture, 
                p,
                clamp(vec4(dilatePerlinWorley(remap01(getPerlin7Octaves(o, totalSize * 4.0, true), perlinDilateLowRemap, perlinDilateHighRemap), 
                                              remap01(getWorley3Octaves(o, totalSize * 6.0), worleyDilateLowRemap, worleyDilateHighRemap), 
                                              perlinWorleyDifference), 
                           vec3(remap01(getWorley3Octaves(o, totalSize * 6.0), totalWorleyLowRemap, totalWorleyHighRemap), 
                                remap01(getWorley3Octaves(o, totalSize * 12.0), totalWorleyLowRemap, totalWorleyHighRemap), 
                                remap01(getWorley3Octaves(o, totalSize * 24.0), totalWorleyLowRemap, totalWorleyHighRemap))), vec4(0.0), vec4(1.0)));

  }
  
}  
